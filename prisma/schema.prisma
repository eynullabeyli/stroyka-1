// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model category {
  uniq_id     String        @unique
  createdAt   DateTime      @default(dbgenerated("NOW"))
  name_az     String        @db.VarChar(255)
  name_en     String        @db.VarChar(255)
  name_ru     String        @db.VarChar(255)
  slug        String        @unique @db.VarChar(255)
  subcategory subcategory[]
  altcategory altcategory[]
  product     product[]
}

model subcategory {
  uniq_id     String        @unique
  createdAt   DateTime      @default(dbgenerated("NOW"))
  name_az     String        @db.VarChar(255)
  name_en     String        @db.VarChar(255)
  name_ru     String        @db.VarChar(255)
  slug        String        @unique @db.VarChar(255)
  category    category?     @relation(fields: [category_id], references: [uniq_id])
  category_id String        @unique @db.VarChar(255)
  altcategory altcategory[]
  product     product[]
}

model altcategory {
  uniq_id     String      @unique
  createdAt   DateTime    @default(dbgenerated("NOW"))
  name_az     String      @db.VarChar(255)
  name_en     String      @db.VarChar(255)
  name_ru     String      @db.VarChar(255)
  slug        String      @unique @db.VarChar(255)
  subcategory subcategory @relation(fields: [subcat_id], references: [uniq_id])
  category    category    @relation(fields: [cat_id], references: [uniq_id])
  cat_id      String      @unique
  subcat_id   String      @unique
  product     product[]
}

model product {
  uniq_id       String        @unique
  createdAt     DateTime      @default(dbgenerated("NOW"))
  name_az       String        @db.VarChar(255)
  name_en       String        @db.VarChar(255)
  name_ru       String        @db.VarChar(255)
  slug          String        @unique
  description   Json          @db.Json
  specification Json          @db.Json
  price         Float         @db.Float
  status        ProductStatus
  weight        Float         @db.Float
  model         String        @db.VarChar(255)
  images        Json          @db.Json
  manufacturer  Json
  type          String        @db.VarChar(255)
  code          String        @db.VarChar(255)
  isBestseller  Boolean       @db.TinyInt
  isFeatured    Boolean       @db.TinyInt
  altcategory   altcategory?  @relation(fields: [altcat_id], references: [uniq_id])
  altcat_id     String        @unique @db.VarChar(255)
  subcategory   subcategory?  @relation(fields: [subcat_id], references: [uniq_id])
  subcat_id     String        @unique @db.VarChar(255)
  cat_id        String        @unique @db.VarChar(255)
  category      category      @relation(fields: [cat_id], references: [uniq_id])
  checkout      checkout[]
}

model contact {
  id        Int           @id @default(autoincrement())
  uniq_id   String        @unique
  createdAt DateTime      @default(dbgenerated("NOW"))
  name      String        @db.VarChar(255)
  email     String        @db.VarChar(255)
  phone     String        @db.VarChar(100)
  message   String        @db.Text
  source    ContactSource
}

model aboutus {
  id        Int      @id @default(autoincrement())
  uniq_id   String   @unique
  createdAt DateTime @default(dbgenerated("NOW"))
  title     Json     @db.Json
  context   Json     @db.Json
}

model user {
  uniq_id   String     @unique @db.VarChar(255)
  createdAt DateTime   @default(dbgenerated("NOW"))
  name      String     @db.VarChar(100)
  lastname  String     @db.VarChar(100)
  phone     String     @db.VarChar(100)
  password  String     @db.VarChar(255)
  email     String     @unique @db.VarChar(150)
  adress    String     @db.Text
  checkout  checkout[]
}

model checkout {
  uniq_id      String   @unique @db.VarChar(255)
  createdAt    DateTime @default(dbgenerated("NOW"))
  productCount Int      @db.Int
  orderAdress  String   @db.Text
  status       Boolean
  user         user     @relation(fields: [userId], references: [uniq_id])
  userId       String   @unique @db.VarChar(255)
  product      product? @relation(fields: [productId], references: [uniq_id])
  productId    String   @unique @db.VarChar(255)
}

model slider {
  uniq_id            String   @unique @db.VarChar(255)
  createdAt          DateTime @default(dbgenerated("NOW"))
  title              Json     @db.Json
  description        Json     @db.Json
  image              String   @db.VarChar(255)
  mobile_image       String   @db.VarChar(255)
  mobile_description Json     @db.Json
  path               String   @db.VarChar(255)
}

model banner {
  uniq_id      String   @unique @db.VarChar(255)
  createdAt    DateTime @default(dbgenerated("NOW"))
  image        String   @db.VarChar(255)
  mobile_image String   @db.VarChar(255)
  title        Json     @db.Json
  description  Json     @db.Json
}

model adress {
  uniq_id     String   @unique @db.VarChar(255)
  createdAt   DateTime @default(dbgenerated("NOW"))
  adress      String
  email       String
  number1     String
  number2     String
  openTimes   String
  coordinates String
}

model team {
  uniq_id    String   @unique @db.VarChar(255)
  createdAt  DateTime @default(dbgenerated("NOW"))
  title      Json
  profession Json
  image      String
}

enum ProductStatus {
  active
  deactive
}

enum ContactSource {
  contact
  askQuestion
  writeDirector
}
